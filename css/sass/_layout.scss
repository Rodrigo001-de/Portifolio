// MENU

.menu {
  width: 100%;

  display: flex;
  justify-content: space-between;
  position: fixed;

  padding: 48px 16px;
}

@media screen and (max-width: 960px) {
  .menu-left {
    display: none;
  }

  .menu-right {
    display: none;
  }
}

// CONTAINER

.flex-end {
  display: flex;
  justify-content: flex-end;
  align-items: center;
}

.relative {
  position: relative;
}

.container {
  // limitando para um container fixo para ficar melhor para trabalhar com
  // várias telas
  max-width: 1220px;

  margin: 0 auto;

  padding: 24px 16px;

  display: flex;
  justify-content: center;
  align-items: center;
}

.hero {
  // altura de 100% "da tela"
  height: 100vh;
}

@media screen and (max-width: 960px) {
  .hero {
    height: auto;
  }

  .container {
    flex-direction: column;
  }
}

// nth-child é para escolhar a filha 
.container-item:nth-child(1) {
  // vai falar como os container-items(divs filhas) vão crecer grow=crecer
  // flex-grow: 2; eu disse para essa filha crecer 2 vezes mais
  flex-grow: 3;
  max-width: 700px;

  margin: 40px 0px;
}

.container-item:nth-child(2) {
  // vai falar como os container-items(divs filhas) vão crecer grow=crecer
  // // flex-grow: 1; eu disse para essa filha crecer 1 vez mais
  flex-grow: 1;

  display: flex;
  justify-content: center;
  align-items: center;

  margin: 40px 0px;

  img {
    max-width: 400px;
    display: none;
  }
}

.bg-hero {
  position: absolute;
  top: 0;
  left: 0;

  width: 100%;
  height: 100vh;

  overflow: hidden;
  z-index: -1;

  display: flex;
  justify-content: center;
  align-items: center;
}

@media screen and (max-width: 960px) {
  .svg-hero {
    transform: scale(2) rotate(25deg);
  }  
}

@media screen and (max-width: 1200px) {
  .svg-hero {
    transform: scale(1.5) rotate(25deg);
  }
}

@media screen and (max-width: 1400px) {
  .svg-hero {
    transform: scale(1.5);
  }
}

// SELECTED WORKS

.bb-gray {
  width: 100%;
  border-bottom: 1px solid $black-light;
}

.list-item {
  max-width: 1200px;
  margin: 0 auto;
  padding: 16px 24px;

  position: relative;

  display: flex;
  justify-content: flex-start;
  align-items: center;

  a {
    &:hover {
      // pegue o proximo elemento(img)
      & + .img-project {
        transform: translate(-50%, -50%) translate3d(0, 0, 0);
        opacity: 1;
      }
    }
  }
}

.img-project {
  max-width: 720px;
  border-radius: 4px;

  position: absolute;
  top: 50%;
  left: 50%;

  transition: 1s ease;
  z-index: -1;

  opacity: 0;

  transform: translate(-50%, -50%) translate3d(-1000px, 0, 0) skewx(70deg); // ter como referencia o centro
}

.get {
  max-width: 1200px;

  margin: 0 auto;
  padding: 16px 24px;
}

// ANIMATIONS

#square1 {
  transform-origin: center center;
  transform-box: fill-box;
  animation: rotate1 3s ease infinite alternate;
}

#square2 {
  transform-origin: center center;
  transform-box: fill-box;
  animation: rotate1 3s ease infinite alternate;
}

#square4 {
  transform-origin: center center;
  transform-box: fill-box;
  animation: rotate1 3s ease infinite alternate;
}

#square5 {
  transform-origin: center center;
  transform-box: fill-box;
  animation: rotate1 3s ease infinite alternate;
}

@keyframes rotate1{
  0%{
    transform: rotate(0deg);
  }
  100%{
    transform: rotate(60deg);
  }
}

#square3 {
  transform-origin: center center;
  transform-box: fill-box;
  animation: rotate3 2.5s ease infinite alternate;
}

#square6 {
  transform-origin: center center;
  transform-box: fill-box;
  animation: rotate3 2.5s ease infinite alternate;
}

#square7 {
  transform-origin: center center;
  transform-box: fill-box;
  animation: rotate3 2.5s ease infinite alternate;
}

#square8 {
  transform-origin: center center;
  transform-box: fill-box;
  animation: rotate3 2.5s ease infinite alternate;
}

@keyframes rotate3{
  0%{
    transform: rotate(0deg);
  }
  100%{
    transform: rotate(270deg);
  }
}